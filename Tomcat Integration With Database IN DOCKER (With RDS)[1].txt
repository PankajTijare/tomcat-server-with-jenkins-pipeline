1.	Launch Instance : - 
	Name (TomDb)
	Select (AMI : Ubuntu 20.04)
Select (t2.micro)
Create Key Pair
Default VPC: -
	Security Group: All traffic
Storage (gp2) 
Review and Launch

2.	Create RDS : -
Create Database
Master Name = admin
Master Password = 12345678
(Keep RDS in same AZ as Instance)
Security Group = (Choose Existing With ALL Traffic Inbounded)
Create Database

3.	Take SSH of Instance : -
	CLI:	sudo su
		apt update -y
		apt install docker.io -y
		systemctl status docker
		vim copyfile
<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!-- The contents of this file will be loaded for each web application -->
<Context>
    <!-- Default set of monitored resources. If one of these changes, the    -->
    <!-- web application will be reloaded.                                   -->
    <WatchedResource>WEB-INF/web.xml</WatchedResource>
    <WatchedResource>WEB-INF/tomcat-web.xml</WatchedResource>
    <WatchedResource>${catalina.base}/conf/web.xml</WatchedResource>
    <!-- Uncomment this to disable session persistence across Tomcat restarts -->
    <!--
    <Manager pathname="" />
    -->
<Resource name="jdbc/TestDB" auth="Container" type="javax.sql.DataSource"
           maxTotal="500" maxIdle="30" maxWaitMillis="1000"
           username="USERNAME" password="PASSWORD" driverClassName="com.mysql.jdbc.Driver"
           url="jdbc:mysql://<RDS ENDPOINT>:3306/studentapp?useUnicode=yes&amp;characterEncoding=utf8"/>
</Context>
		vim Dockerfile
From ubuntu:latest
RUN apt update -y
RUN apt install openjdk-11-jre-headless -y
ADD https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.73/bin/apache-tomcat-9.0.73.tar.gz /opt/
RUN tar -xvf /opt/apache-tomcat-9.0.73.tar.gz -C /opt/
COPY copyfile /opt/apache-tomcat-9.0.73/conf/context.xml
ADD https://s3-us-west-2.amazonaws.com/studentapi-cit/student.war /opt/apache-tomcat-9.0.73/webapps/
ADD https://s3-us-west-2.amazonaws.com/studentapi-cit/mysql-connector.jar /opt/apache-tomcat-9.0.73/lib/
EXPOSE 8080
CMD ./opt/apache-tomcat-9.0.73/bin/startup.sh; sleep inf
		docker build -t tom .
		docker pull mysql
		docker images
		docker run -d -p 8080:8080 tom
		docker run -d -e MYSQL_ROOT_PASSWORD=my-secret-pw mysql
		docker ps

		http://<Instance public IP>:8080/student/ (Check student app)

mysql> 	mysql -h (Paste RDS Endpoint) -u admin -p12345678
	CREATE DATABASE studentapp;
	use studentapp;
CREATE TABLE if not exists students(student_id INT NOT NULL AUTO_INCREMENT,
  student_name VARCHAR(100) NOT NULL,
  student_addr VARCHAR(100) NOT NULL,
  student_age VARCHAR(3) NOT NULL,
  student_qual VARCHAR(20) NOT NULL,
  student_percent VARCHAR(10) NOT NULL,
  student_year_passed VARCHAR(10) NOT NULL,
  PRIMARY KEY (student_id)
  );
mysql>		exit
bash-4.4#	exit
	
http://<Instance public IP>:8080/student/	(Register details in StudentApp and it will be saved in DB)

